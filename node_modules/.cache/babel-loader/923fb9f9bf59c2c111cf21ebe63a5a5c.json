{"ast":null,"code":"var _jsxFileName = \"/home/nxtwave/react-hooks/sessions/making-api-call-with-hooks-part-2/src/components/Leaderboard/index.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport Loader from 'react-loader-spinner';\nimport LeaderboardTable from '../LeaderboardTable';\nimport { LeaderboardContainer, LoadingViewContainer } from './styledComponents';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst apiStatusConstants = {\n  initial: 'INITIAL',\n  inProgress: 'IN_PROGRESS',\n  success: 'SUCCESS',\n  failure: 'FAILURE'\n};\n\nconst Leaderboard = () => {\n  _s();\n\n  const [apiResponse, setApiResponse] = useState({\n    status: apiStatusConstants.initial,\n    data: null,\n    errorMsg: null\n  });\n  useEffect(() => {\n    const getLeaderboardData = async () => {\n      setApiResponse({\n        status: apiStatusConstants.inProgress,\n        data: null,\n        errorMsg: null\n      });\n      const url = 'https://apis.ccbp.in/leaderboard';\n      const options = {\n        method: 'GET',\n        headers: {\n          Authorization: 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6InJhaHVsIiwicm9sZSI6IlBSSU1FX1VTRVIiLCJpYXQiOjE2MjMwNjU1MzJ9.D13s5wN3Oh59aa_qtXMo3Ec4wojOx0EZh8Xr5C5sRkU'\n        }\n      };\n      const response = await fetch(url, options);\n      const responseData = await response.json();\n\n      if (response.ok) {\n        setApiResponse(prevApiResponse => ({ ...prevApiResponse,\n          status: apiStatusConstants.success,\n          data: responseData\n        }));\n      }\n    };\n\n    getLeaderboardData();\n  }, []);\n\n  const renderFailureView = () => {};\n\n  const renderSuccessView = () => {\n    const {\n      data\n    } = apiResponse;\n    const formattedLeaderboardData = data.leaderboard_data.map(eachUser => ({\n      id: eachUser.id,\n      rank: eachUser.rank,\n      name: eachUser.name,\n      profileImgUrl: eachUser.profile_image_url,\n      score: eachUser.score,\n      language: eachUser.language,\n      timeSpent: eachUser.time_spent\n    }));\n    const newUser = {\n      id: '11',\n      rank: '1',\n      name: 'Teja Babu',\n      profileImgUrl: 'https://media-content.ccbp.in/ccbp_prod/media/profile_pic/4c510fb0-e59e-403c-8dc0-12a781df1e90.jpeg',\n      score: '120',\n      language: 'React Js',\n      timeSpent: '45'\n    }; // Move the existing user with rank 1 to rank 11\n\n    const existingUserIndex = formattedLeaderboardData.findIndex(user => user.rank === '1');\n\n    if (existingUserIndex !== -1) {\n      formattedLeaderboardData[existingUserIndex].rank = '11';\n    } // Push the new user to the beginning of the array\n\n\n    formattedLeaderboardData.unshift(newUser);\n    return /*#__PURE__*/_jsxDEV(LeaderboardTable, {\n      leaderboardData: formattedLeaderboardData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 12\n    }, this);\n  };\n\n  const renderLoadingView = () => /*#__PURE__*/_jsxDEV(LoadingViewContainer, {\n    children: /*#__PURE__*/_jsxDEV(Loader, {\n      type: \"ThreeDots\",\n      color: \"#ffffff\",\n      height: \"50\",\n      width: \"50\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n\n  const renderLeaderboard = () => {\n    const {\n      status\n    } = apiResponse;\n\n    switch (status) {\n      case apiStatusConstants.inProgress:\n        return renderLoadingView();\n\n      case apiStatusConstants.success:\n        return renderSuccessView();\n\n      case apiStatusConstants.failure:\n        return renderFailureView();\n\n      default:\n        return null;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(LeaderboardContainer, {\n    children: renderLeaderboard()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 10\n  }, this);\n};\n\n_s(Leaderboard, \"LcejUL5Z8gTq0/4EosyqIhBfGKM=\");\n\n_c = Leaderboard;\nexport default Leaderboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Leaderboard\");","map":{"version":3,"names":["useState","useEffect","Loader","LeaderboardTable","LeaderboardContainer","LoadingViewContainer","apiStatusConstants","initial","inProgress","success","failure","Leaderboard","apiResponse","setApiResponse","status","data","errorMsg","getLeaderboardData","url","options","method","headers","Authorization","response","fetch","responseData","json","ok","prevApiResponse","renderFailureView","renderSuccessView","formattedLeaderboardData","leaderboard_data","map","eachUser","id","rank","name","profileImgUrl","profile_image_url","score","language","timeSpent","time_spent","newUser","existingUserIndex","findIndex","user","unshift","renderLoadingView","renderLeaderboard"],"sources":["/home/nxtwave/react-hooks/sessions/making-api-call-with-hooks-part-2/src/components/Leaderboard/index.js"],"sourcesContent":["import {useState, useEffect} from 'react'\nimport Loader from 'react-loader-spinner'\nimport LeaderboardTable from '../LeaderboardTable'\n\nimport {LeaderboardContainer, LoadingViewContainer} from './styledComponents'\n\nconst apiStatusConstants = {\n  initial: 'INITIAL',\n  inProgress: 'IN_PROGRESS',\n  success: 'SUCCESS',\n  failure: 'FAILURE',\n}\n\nconst Leaderboard = () => {\n  const [apiResponse, setApiResponse] = useState({\n    status: apiStatusConstants.initial,\n    data: null,\n    errorMsg: null,\n  })\n\n  useEffect(() => {\n    const getLeaderboardData = async () => {\n      setApiResponse({\n        status: apiStatusConstants.inProgress,\n        data: null,\n        errorMsg: null,\n      })\n\n      const url = 'https://apis.ccbp.in/leaderboard'\n      const options = {\n        method: 'GET',\n        headers: {\n          Authorization:\n            'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6InJhaHVsIiwicm9sZSI6IlBSSU1FX1VTRVIiLCJpYXQiOjE2MjMwNjU1MzJ9.D13s5wN3Oh59aa_qtXMo3Ec4wojOx0EZh8Xr5C5sRkU',\n        },\n      }\n      const response = await fetch(url, options)\n      const responseData = await response.json()\n      if (response.ok) {\n        setApiResponse(prevApiResponse => ({\n          ...prevApiResponse,\n          status: apiStatusConstants.success,\n          data: responseData,\n        }))\n      }\n    }\n\n    getLeaderboardData()\n  }, [])\n\n  const renderFailureView = () => {}\n\n  const renderSuccessView = () => {\n    const {data} = apiResponse\n    const formattedLeaderboardData = data.leaderboard_data.map(eachUser => ({\n      id: eachUser.id,\n      rank: eachUser.rank,\n      name: eachUser.name,\n      profileImgUrl: eachUser.profile_image_url,\n      score: eachUser.score,\n      language: eachUser.language,\n      timeSpent: eachUser.time_spent,\n    }))\n\n    const newUser = {\n      id: '11',\n      rank: '1',\n      name: 'Teja Babu',\n      profileImgUrl:\n        'https://media-content.ccbp.in/ccbp_prod/media/profile_pic/4c510fb0-e59e-403c-8dc0-12a781df1e90.jpeg',\n      score: '120',\n      language: 'React Js',\n      timeSpent: '45',\n    }\n\n    // Move the existing user with rank 1 to rank 11\n    const existingUserIndex = formattedLeaderboardData.findIndex(\n      user => user.rank === '1',\n    )\n    if (existingUserIndex !== -1) {\n      formattedLeaderboardData[existingUserIndex].rank = '11'\n    }\n\n    // Push the new user to the beginning of the array\n    formattedLeaderboardData.unshift(newUser)\n    return <LeaderboardTable leaderboardData={formattedLeaderboardData} />\n  }\n\n  const renderLoadingView = () => (\n    <LoadingViewContainer>\n      <Loader type='ThreeDots' color='#ffffff' height='50' width='50' />\n    </LoadingViewContainer>\n  )\n\n  const renderLeaderboard = () => {\n    const {status} = apiResponse\n\n    switch (status) {\n      case apiStatusConstants.inProgress:\n        return renderLoadingView()\n      case apiStatusConstants.success:\n        return renderSuccessView()\n      case apiStatusConstants.failure:\n        return renderFailureView()\n      default:\n        return null\n    }\n  }\n\n  return <LeaderboardContainer>{renderLeaderboard()}</LeaderboardContainer>\n}\n\nexport default Leaderboard\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}